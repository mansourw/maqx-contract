{
  "manifestVersion": "3.2",
  "proxies": [],
  "impls": {
    "d9f9a6b8326dfb3194558389126478f407bd00a8bd8e8c93f5e7cfdaa8d05fc4": {
      "address": "0x87e55C10671764c3C4885985Fd2b763EDE96de3D",
      "txHash": "0x3da77c09e95b63b4e94ad06b72f3eac742fe46cb409e222f6e7834b76a3f725f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "founder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:28"
          },
          {
            "label": "rmrInterval",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:35"
          },
          {
            "label": "lastRegen",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:36"
          },
          {
            "label": "eligibleUsers",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:37"
          },
          {
            "label": "_lastTransferTimestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:40"
          },
          {
            "label": "transferDelay",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:41"
          },
          {
            "label": "_isExcludedFromLimits",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:42"
          },
          {
            "label": "globalCooldownTime",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:43"
          },
          {
            "label": "maxSellPercent",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:44"
          },
          {
            "label": "isExcludedFromLimit",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:45"
          },
          {
            "label": "zkVerifier",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IZKRegenVerifier)1449",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:48"
          },
          {
            "label": "usedZKProofs",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:51"
          },
          {
            "label": "eventMultiplier",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:58"
          },
          {
            "label": "pledgeFundWallet",
            "offset": 0,
            "slot": "13",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:60"
          },
          {
            "label": "pledgeRegenShare",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:61"
          },
          {
            "label": "burnToSeedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:74"
          },
          {
            "label": "burnToWitnessAmount",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:75"
          },
          {
            "label": "burnToVerifyAmount",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:76"
          },
          {
            "label": "burnToContractAmount",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:79"
          },
          {
            "label": "burnToActAmount",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:83"
          },
          {
            "label": "burnToCommitAmount",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:84"
          },
          {
            "label": "minWitnesses",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:85"
          },
          {
            "label": "minVerifiers",
            "offset": 0,
            "slot": "22",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:86"
          },
          {
            "label": "globalMintWallet",
            "offset": 0,
            "slot": "23",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:88"
          },
          {
            "label": "founderWallet",
            "offset": 0,
            "slot": "24",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:89"
          },
          {
            "label": "developerPoolWallet",
            "offset": 0,
            "slot": "25",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:90"
          },
          {
            "label": "daoTreasuryWallet",
            "offset": 0,
            "slot": "26",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:91"
          },
          {
            "label": "zkDistributionWallet",
            "offset": 0,
            "slot": "27",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:92"
          },
          {
            "label": "claimableZKRegen",
            "offset": 0,
            "slot": "28",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:93"
          },
          {
            "label": "hasReceivedSeed",
            "offset": 0,
            "slot": "29",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:95"
          },
          {
            "label": "seedBurned",
            "offset": 0,
            "slot": "30",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:96"
          },
          {
            "label": "seedRegenerated",
            "offset": 0,
            "slot": "31",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:97"
          },
          {
            "label": "totalBurnedByUser",
            "offset": 0,
            "slot": "32",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:115"
          },
          {
            "label": "pendingRegen",
            "offset": 0,
            "slot": "33",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:117"
          },
          {
            "label": "pendingEventRegen",
            "offset": 0,
            "slot": "34",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:119"
          },
          {
            "label": "regenUsers",
            "offset": 0,
            "slot": "35",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:123"
          },
          {
            "label": "regenUserList",
            "offset": 0,
            "slot": "36",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:124"
          },
          {
            "label": "regenInterval",
            "offset": 0,
            "slot": "37",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:124"
          },
          {
            "label": "lastRegenTimestamp",
            "offset": 0,
            "slot": "38",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:125"
          },
          {
            "label": "regenThreshold",
            "offset": 0,
            "slot": "39",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:127"
          },
          {
            "label": "lastUserRegen",
            "offset": 0,
            "slot": "40",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:128"
          },
          {
            "label": "eventRMRBonus",
            "offset": 0,
            "slot": "41",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:132"
          },
          {
            "label": "lockedBalance",
            "offset": 0,
            "slot": "42",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:133"
          },
          {
            "label": "lockedUntil",
            "offset": 0,
            "slot": "43",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:135"
          },
          {
            "label": "isDevTokenOrigin",
            "offset": 0,
            "slot": "44",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:136"
          },
          {
            "label": "regenCapPercent",
            "offset": 0,
            "slot": "45",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:136"
          },
          {
            "label": "userRegenShare",
            "offset": 0,
            "slot": "46",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:138"
          },
          {
            "label": "daoRegenShare",
            "offset": 0,
            "slot": "47",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:140"
          },
          {
            "label": "founderRegenShare",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:140"
          },
          {
            "label": "devRegenShare",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:141"
          },
          {
            "label": "regenDecayShare",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:141"
          },
          {
            "label": "maxSeedRegens",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:144"
          },
          {
            "label": "pledgeFromSeedDerived",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:147"
          },
          {
            "label": "giftedBalance",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:149"
          },
          {
            "label": "giftRewardQuota",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:150"
          },
          {
            "label": "lastGiftTimestamp",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:152"
          },
          {
            "label": "rmrDurations",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:157"
          },
          {
            "label": "rmrBonuses",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:157"
          },
          {
            "label": "rmrMinBalances",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:158"
          },
          {
            "label": "rmrStartTime",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:159"
          },
          {
            "label": "lastClaimedTier",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_uint8)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:159"
          },
          {
            "label": "tierRewards",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:160"
          },
          {
            "label": "rmrTiers",
            "offset": 0,
            "slot": "62",
            "type": "t_array(t_struct(RMRConfig)1561_storage)6_storage",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:182"
          },
          {
            "label": "rmrTier",
            "offset": 0,
            "slot": "74",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:184"
          },
          {
            "label": "sellCooldown",
            "offset": 0,
            "slot": "75",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:931"
          },
          {
            "label": "lastBuyTimestamp",
            "offset": 0,
            "slot": "76",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:936"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "77",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.1.sol:940"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RMRConfig)1561_storage)6_storage": {
            "label": "struct MAQXToken.RMRConfig[6]",
            "numberOfBytes": "384"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IZKRegenVerifier)1449": {
            "label": "contract IZKRegenVerifier",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RMRConfig)1561_storage": {
            "label": "struct MAQXToken.RMRConfig",
            "members": [
              {
                "label": "minDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
