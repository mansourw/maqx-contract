{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8E558A92aF0339C9f550aE4c3124071F5fA2c7a3",
      "txHash": "0x6d710098acf6c654130f45da9e01b38d94de8dc8983fbd897987bfb7318d6eea",
      "kind": "transparent"
    },
    {
      "address": "0x5AdC937465Cf93D17dB670A682Ee1bfc3c6F24E2",
      "txHash": "0xa23aa109ab05d4aa088c0d2bb53f58d236a3c823b660a645bfc9228dd4ed84ba",
      "kind": "transparent"
    },
    {
      "address": "0x1f57Fc18330eDc409897Fe3C399cAF5aa5D1B55c",
      "txHash": "0xad3b1bb08714c7b24e733736f7d314911714c76e80c5fd853bfb4394f55a8740",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6b698dfb8de035946a2d76277d80944dbf7ab27301a6cad52ebe591fd96a8a10": {
      "address": "0xC668C9e29617d505eA11a4f67F398764dBaFdeB1",
      "txHash": "0x11dc008c00099db3998274c7f3f4e8329e99a3f9522ca82396cc32e6af9e1502",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "globalMintWallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:18"
          },
          {
            "label": "founderWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:19"
          },
          {
            "label": "developerPoolWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:20"
          },
          {
            "label": "daoTreasuryWallet",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:21"
          },
          {
            "label": "hasReceivedSeed",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:24"
          },
          {
            "label": "regenCapPercent",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:27"
          },
          {
            "label": "userRegenShare",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:28"
          },
          {
            "label": "daoRegenShare",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:29"
          },
          {
            "label": "founderRegenShare",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:30"
          },
          {
            "label": "lockedBalance",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "86e82aab3b7115b8f3f1668fb2df4ef0d39711642f076bfac57dd23faf652529": {
      "address": "0x1D597E7Bc08D8b5c975c06371df60fEc3eE3cC83",
      "txHash": "0x8681349f1b1ec2c69474abfecc83fe706e84c91ae10830d5c74595fb673feadc",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "globalMintWallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:18"
          },
          {
            "label": "founderWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:19"
          },
          {
            "label": "developerPoolWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:20"
          },
          {
            "label": "daoTreasuryWallet",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:21"
          },
          {
            "label": "hasReceivedSeed",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:24"
          },
          {
            "label": "regenCapPercent",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:27"
          },
          {
            "label": "userRegenShare",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:28"
          },
          {
            "label": "daoRegenShare",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:29"
          },
          {
            "label": "founderRegenShare",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:30"
          },
          {
            "label": "lockedBalance",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MAQXToken",
            "src": "contracts/MAQXToken_v1.0.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
